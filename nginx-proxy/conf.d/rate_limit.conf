# $binary_remote_addr: Our reference to the binary IP address of each user
# zone=by_ip:10m: shared memory zone which will keep the IP addresses in memory with a cap of 10mb (can store 16,000 addresses to 1mb — so 160,000 here
# rate=3r/s; : Our rate per given time period. Here is it 3 per second. We could also have per minute e.t.c.

limit_req_zone $binary_remote_addr zone=by_ip:10m rate=10r/s;


# add to other hosts
# Decided where you want to use the rate limiting — which resources or locations.

# location ~ ^/(static|images) {
#    proxy_pass http://localhost:3002;
# }
# location / {
#    limit_req zone=basic_limit burst=5 nodelay;
#    proxy_pass http://localhost:3002;
# }

# burst=5: Given that we might want to allow more requests at any given time — this will allow a temporary burst of 5 more requests per time period at an interval of 100ms each. If you want to have this interval reduced so it happens automatically (useful for serving js/css/images quickly to your frontend) you can also remove the delay like so:
# burst=5 nodelay;


# This will limit each IP address to 3 requests per second, allowing 5 queued requests per second if needed at times of high load.
# For us this was perfect because we didn’t want to limit requests for static files but only to our frontend rendering server on our main routes because server side rendering is somewhat costly! :)